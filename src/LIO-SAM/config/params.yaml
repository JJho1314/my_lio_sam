globalmap_server:
  globalSurfMap_dirctory: "/home/jjho/map_campus/Surf_map/"
  globalSurfMap_pcd: "/home/jjho/map_campus/Surf_map/pcd_info.csv"
  globalCornerMap_dirctory: "/home/jjho/map_campus/Corner_map/"
  globalCornerMap_pcd: "/home/jjho/map_campus/Corner_map/pcd_info.csv"
  area_size: 50
  margin: 100
  updateMapFrequency: 10
  ndt_neighbor_search_method: "DIRECT7" #if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast
  ndt_resolution: 0.5
  Matching_method: "loam"    # loam or ndt
  intialMethod: "human"  # gps  human
  initialPose: [-51.0476009806,80.227463481,0]
  optimization_with_GPS: false
  initial_count_num: 5

lio_sam:

  PickedSurfNum: 50    #定位10=个点, 给规划建图100
  PickedCornerNum: 10   #定位5=个点，给规划建图20

  # Topics
  # pointCloudTopic: "velodyne_points"               # Point cloud data 
  pointCloudTopic: "/rslidar_points"     #rslidar_points  lane_pointcloud
  imuTopic: "/ins550d/imu/data"                       # IMU data "/ins550d/imu/data" 
  odomTopic: "/odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "/gps/correct_odom"   #odometry/gps  /discovery/location/pose   /gps/correct_odom  # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: "slam_base_link"
  baselinkFrame: "slam_base_link"
  odometryFrame: "slam_odom"
  mapFrame: "slam_map"

  # GPS Settings
  useImuHeadingInitialization: true           # if using GPS data, set to "true"
  useGpsElevation: false                      # 海拔高度，是否使用gps确定z的位置if GPS elevation is bad, set to "false"
  gpsCovThreshold: 1.0                        # m^2, threshold for using GPS data
  poseCovThreshold: 0.5                       # m^2, threshold for using GPS data
  
  # Export settings
  savePCD: true                                         # https://github.com/TixiaoShan/LIO-SAM/issues/3
  savePCDDirectory: "/my_lio_sam/map/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

  # N_SCAN: 128                                 # number of lidar channel (i.e., 16, 32, 64, 128)
  # Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048)
  # timeField: "time"                           # point timestamp field, Velodyne - "time", Ouster - "t"
  # downsampleRate: 1  
  
  # UrbanLoco
  N_SCAN: 128                                   # number of lidar channel (i.e., 16, 32, 64, 128)
  Horizon_SCAN: 1800                            # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048) rslidar: 2000
  timeField: "timestamp"                        # point timestamp field, Velodyne - "time", Ouster - "t"
  downsampleRate: 2                             # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1 
  
  # # my_robot Sensor Settings
  # N_SCAN: 16                                  # number of lidar channel (i.e., 16, 32, 64, 128)
  # Horizon_SCAN: 2000                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048) rslidar: 2000
  # timeField: "time"                           # point timestamp field, Velodyne - "time", Ouster - "t"
  # downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1 

  # IMU Settings
  imuAccNoise: 0.0198922
  imuAccBiasN: 0.01616895
  imuGyrNoise: 0.0171269
  imuGyrBiasN: 0.0162997                 # 会影响旋转的准确性

  # imuAccNoise: 3.9939570888238808e-03
  # imuGyrNoise: 1.5636343949698187e-03
  # imuAccBiasN: 6.4356659353532566e-05
  # imuGyrBiasN: 3.5640318696367613e-05
  imuGravity: 9.80511

  
  # my added param
  lidar_type: rslidar  #("Velodyne", "rslidar")
  imuFrequency: 200        # 设置imu频率
  ang_bottom: 15.0
  Vertical_angle: 30.0
  min_range: 1.8     #default 1.0
  max_range: 100.0   # DO NOT BE TOO SMALL
  area_num: 6        #default 6
  iter_num: 20   #default 30
  distance_limit: 10000.0  # 50*50

  # Extrinsics (imu -> lidar)
  # T_LI
  extrinsicTrans: [0, -1.15, -1.27]
  # extrinsicTrans: [0, 0, 0]

  # origin
  extrinsicRot: [0.999,    0.034,  0.00228,
  -0.034,   0.999,  -0.0145,
  -0.00277,   0.0144,        1]
  extrinsicRPY: [0.999,    0.034,  0.00228,
  -0.034,   0.999,  -0.0145,
  -0.00277,   0.0144,        1]

  # UrbanLoco
#   extrinsicRot: [-0.999,  -0.037, -0.00178,
#   0.037,   -0.999,   0.0159,
# -0.00237,   0.0158,        1]
#   extrinsicRPY: [-0.999,  -0.037, -0.00178,
#   0.037,   -0.999,   0.0159,
# -0.00237,   0.0158,        1]


  # ins550d

  # extrinsicRot: [0, 1, 0,
  #                -1, 0, 0,
  #                0, 0, 1]
  # extrinsicRPY: [0, 1, 0,
  #                -1, 0, 0,
  #                0, 0, 1]
  # extrinsicRot: [0.99948,   0.029556, -0.0128854,
  #               -0.0298385,   0.999306, -0.0223128
  #                 0.012217,  0.0226856,   0.999668]
    
  # extrinsicRPY: [0.99948,   0.029556, -0.0128854,
  #               -0.0298385,   0.999306, -0.0223128
  #                 0.012217,  0.0226856,   0.999668]

  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1   # 定位 0.01  建图0.1
  edgeFeatureMinValidNum: 10
  surfFeatureMinValidNum: 100



  # voxel filter paprams  rslidar16    0.2 0.1 0.2
  odometrySurfLeafSize: 0.2                 # default: 0.4 - outdoor, 0.2 - indoor 特征提取用到的对面点的降采样率
  mappingCornerLeafSize: 0.1                # default: 0.2 - outdoor, 0.1 - indoor
  mappingSurfLeafSize: 0.2                  # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1                 # meters   default 1000
  rotation_tollerance: 0.25                     # radians default 1000

  # CPU Params
  numberOfCores: 8                            # number of cores for mapping optimization
  mappingProcessInterval: 0.15            # seconds, regulate mapping frequency   default： 0.15

  # Surrounding map
  surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
  surroundingKeyframeSearchRadius: 50           # meters, within n meters scan-to-map optimization (when loop closure disabled)   50

  # Loop closure
  loopClosureEnableFlag: true
  loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency 1.0
  surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)     50
  historyKeyframeSearchRadius: 15.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
  historyKeyframeFitnessScore: 0.5              # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
  globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density




# Navsat (convert GPS coordinates to Cartesian)
navsat:

  frequency: 50
  wait_for_datum: true
  delay: 0.0
  magnetic_declination_radians: 0.0678933079
  yaw_offset: -1.60570291183478321   #-0.785398163397
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false
  use_odometry_yaw: false
  use_local_cartesian_: true      # enu
  datum: [34.2569999,108.6511768, 0]

# EKF for Navsat
ekf_gps:
  publish_tf: true
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.01
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu/data
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [false, false, false,
                true,  true,  true,
                false, false, false,
                true, true, true,
                true,  true,  true]
  imu0_differential: false
  imu0_queue_size: 50 
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [true,  true,  false,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_differential: false
  odom0_queue_size: 10

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [  1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015]
